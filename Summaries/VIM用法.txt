#====================================================================================
#====================================================================================
#====================================================================================
#安装VIM
sudo apt-get install vim vim-gnome vim-tiny vim-gtk vim-nox
#====================================================================================
#====================================================================================
#====================================================================================
#配置VIM
cd ~
vim .vimrc
		#/*****************************************************
		#	set nocompatible            不使用vi默认键盘布局
		#	set number                  显示行号
		#	set autoindent              自动对齐
		#	set smartindent             智能对齐
		#	set showmatch               括号匹配模式
		#	set ruler                   显示状态行
		#	set incsearch               搜索时一边输入一边显示效果
		#	set tabstop=4               tab键为4个空格
		#	set shiftwidth=4
		#	set softtabstop=4
		#	set cindent                 C语言格式对齐
		#	set nobackup                不要备份文件
		#	set clipboard+=unnamed      与windows共享剪贴板
		#	syntax on                   语法高亮
		#	set mouse=a                 鼠标支持
		#	set ruler 					在编辑过程中，在右下角显示光标位置的状态行
		#/*****************************************************
		
#====================================================================================
#====================================================================================
#====================================================================================
VIM 的三种模式
(1)一般模式：进入vi的默认模式，能够进行复制、黏贴、删除等操作；
(2)编辑模式：从一般模式按下‘i’即可进入；
(3)命令行模式：从一般模式按下“:”、'?'、'/'即可进入
#====================================================================================
#====================================================================================
#====================================================================================
“一般模式”的常用按键	   按键含义
#初级命令
h	                       向左 
J	                       向下 
K	                       向上 
l	                       向右 
20h	                       向左20个字符 
20j	                       向下20行 
20k	                       向上20行 
20l	                       向右20个字符 
Page Up	                   向上翻页 
Page Down	               向下翻页
ctrl-f ctrl-b              整页翻页 f就是forword b就是backward
ctrl-d ctlr-u              翻半页d=down u=up
ctrl-e ctrl-y              滚一行
Home	                   光标移到当前行的最左端
End						   光标移到当前航的最右端
n [空格]	               光标向右移动n个字符
N[Enter]	               光标向下N行
G	                       光标移到最后一行
nG	                       光标移动到第n行
gg或1G	                   光标移动到第一行
/word	                   向下查找word
?word	                   向上查找word
n	                       如果是/word后使用，则表示向下继续查找;如果是?word后使用，则表示向上继续查找；
N	                       如果是/word后使用，则表示向上继续查找；如果是?word后使用，则表示向下继续查找；
:n,m/old/new/g	           从第n行到第m行中，将old替换为new
:n,$s/old/new/g	           从第n行到最后一行中，将old替换为new
u	                       类似windows中的CTRL+Z，前一步
CTRL+r	                   重做前一个操作
x	                       向后删除一个字符
X	                       向前删除一个字符
3x	                       向后删除3个字符
3X	                       向前删除3个字符
dd	                       删除当前行
3dd	                       删除当前行开始的3行
yy或Y                      复制当前行
3yy	                       复制当前行开始的3行
p	                       黏贴到当前光标的下一行
P	                       黏贴到当前光标的上一行
#高级命令
.                         (小数点) 可以重复上一次的命令
N<command>                重复某个命令N次
		#/********************************************************************/
		#	2dd              删除2行
		#	3p               粘贴文本3次
		#	10idesu+[ESC]    会写下 “desu desu desu desu desu desu desu desu desu desu"
		#	.                重复上一个命令―― 100 “desu “.
		#	3.               重复 3 次 “desu” (注意：不是 300，你看，VIM多聪明啊).
		#/********************************************************************/
#高级光标移动
%                         匹配括号移动，包括 (, {, [. （陈皓注：你需要把光标先移到括号上）
* 和 #                    匹配光标当前所在的单词，移动光标到下一个（或上一个）匹配单词（*是下一个，#是上一个）
#====================================================================================
#====================================================================================
#====================================================================================
“命令行模式”的常用按键	   按键含义
:w	                       保存
:q	                       退出vim
:wq	                       保存并退出
:wq!                      （在可以转换权限的情况下）强制保存并退出
:q!	                       直接退出不保存
:w filename				   另存为filename
:n,m w filename	           将第n行到第m行另存为filename
:set nu	                   显示行号
:set nonu	               不显示行号
:! command	               暂时离开vim，并执行command，执行完后再进入vim
:r filename	               将filename文件的数据读入当前文件
:set all	               显示当前vim的环境配置
#====================================================================================
#====================================================================================
#====================================================================================
#编辑模式下的命令
在 Insert 模式下，你可以输入一个词的开头，然后按 <Ctrl+p>或是<Ctrl+n>，自动补齐功能就出现了

#====================================================================================
#====================================================================================
#====================================================================================
#Visual Block功能
Visual Block功能可以用于块复制。按v进入可视化模式。
(1)CTRL+v：开始复制块；
(3)y：复制块；
(4)p：黏贴块；
(5)d：删除块
#块操作举例
	#/********************************************************************/
	#	<Ctrl+v>      开始块操作
	#	<Ctrl+d>      向下移动 (你也可以使用hjkl来移动光标，或是使用%，或是别的)
	#	I-- [ESC]     I是插入，插入“--”，按ESC键来为每一行生效。注意是大写的I
	#/********************************************************************/
	#	<C-v>
	#	选中相关的行 (可使用 j 或 <C-d> 或是 /pattern 或是 % 等……)
	#	$ 到行最后
	#	A, 输入字符串，按 ESC
	#/********************************************************************/
#可视化其他功能
可视化选择： v,V,<Ctrl+v>
	J → 把所有的行连接起来（变成一行）
	< 或 > → 左右缩进
	= → 自动给缩进 （这个功能相当强大，我太喜欢了）
#====================================================================================
#====================================================================================
#====================================================================================
宏录制： qa 操作序列 q, @a, @@

qa 把你的操作记录在寄存器 a。
于是 @a 会replay被录制的宏。
@@ 是一个快捷键用来replay最新录制的宏。
	#/**************************************************************
	#	示例：在一个只有一行且这一行只有“1”的文本中，键入如下命令：
	#	qaYp<C-a>q→
	#	qa 开始录制
	#	Yp 复制行.
	#	<C-a> 增加1.
	#	q 停止录制.
	#	@a → 在1下面写下 2
	#	@@ → 在2 正面写下3
	#	现在做 100@@ 会创建新的100行，并把数据增加到 103.
	#/**************************************************************/
#====================================================================================
#====================================================================================
#====================================================================================
#多文件编辑
多文件编辑的好处是能够将一个文件的某些内容yy后，p到另一个文件中。
vim file1 file2 即可同时编辑两个文件，但是屏幕中同时只会出现一个文件内容，需要进行切换。
(1):n：向下切换；
(2):N：向上切换；
(3):files：列出当前编辑的所有文件；
#====================================================================================
#====================================================================================
#====================================================================================
#多窗口编辑
一个界面能够显示多个文件内容。
(1):sp：打开当前文件；
(2):sp filename：打开filename文件；
(3)CTRL+w+↓：光标切换到下一个窗口；
(4)CTRL+w+↑：光标切换到上一个窗口；
(5):q 关闭光标所在的窗口；
#分屏
分屏: :split 和 vsplit.
下面是主要的命令，你可以使用VIM的帮助 :help split. 你可以参考本站以前的一篇文章VIM分屏。
:split → 创建分屏 (:vsplit创建垂直分屏)
<Ctrl+w><dir> : dir就是方向，可以是 hjkl 或是 ←↓↑→ 中的一个，其用来切换分屏。
<Ctrl+w>_ (或 <Ctrl+w>|) : 最大化尺寸 (<Ctrl+w>| 垂直分屏)
<Ctrl+w>+ (或 <Ctrl+w>-) : 增加尺寸
Ctrl+w then C: 关闭分屏
:q 也可以关闭分屏
#====================================================================================
#====================================================================================
#====================================================================================
#编码问题
可能会出现乱码问题，解决方法：保持终端的字符编码与文件的字符编码一致！tty1~tty6不支持显示中文，因此在tty1~tty6中显示中文必出现乱码，设置终端的字符编码。
编码转换命令：iconv
	iconv -f文件的原本编码-t文件的新编码filename -o newfilename
比如有一个big5编码的文件：1.big5，要转换成utf8的文件：2.utf8，则
	iconv -f big5 -t utf8 1.big5 -o 2.utf8
	
#====================================================================================
#====================================================================================
#====================================================================================
#常见功能挑选
h	                       向左 
j	                       向下 
k	                       向上 
l	                       向右
w                          以单词为单位向后移动
b/B                        以单词为单位向前移动
20h	                       向左20个字符 
20j	                       向下20行 
20k	                       向上20行 
20l	                       向右20个字符 
ctrl-f ctrl-b              整页翻页 f就是forword b就是backward
ctrl-d ctlr-u              翻半页d=down u=up
G	                       光标移到最后一行
nG	                       光标移动到第n行
gg或1G	                   光标移动到第一行
/word	                   向下查找word
?word	                   向上查找word
n	                       如果是/word后使用，则表示向下继续查找;如果是?word后使用，则表示向上继续查找；
N	                       如果是/word后使用，则表示向上继续查找；如果是?word后使用，则表示向下继续查找；
:n,m/old/new/g	           从第n行到第m行中，将old替换为new
:n,$s/old/new/g	           从第n行到最后一行中，将old替换为new
u	                       类似windows中的CTRL+Z，前一步
CTRL+r	                   重做前一个操作
x	                       向后删除一个字符
dd	                       删除当前行
3dd	                       删除当前行开始的3行
yy或Y                      复制当前行
3yy	                       复制当前行开始的3行
p	                       黏贴到当前光标的下一行
P	                       黏贴到当前光标的上一行

%                         匹配括号移动，包括 (, {, [. （陈皓注：你需要把光标先移到括号上）
* 和 #                    匹配光标当前所在的单词，移动光标到下一个（或上一个）匹配单词（*是下一个，#是上一个）
r + <char>                替换光标处的字符为char
:n                        跳转到n行

#Visual Block功能
Visual Block功能可以用于块复制。按v进入可视化模式。
(1)CTRL+v：开始复制块；
(3)y：复制块；
(4)p：黏贴块；
(5)d：删除块
#块操作举例
	#/********************************************************************/
	#	<Ctrl+v>      开始块操作
	#	<Ctrl+d>      向下移动 (你也可以使用hjkl来移动光标，或是使用%，或是别的)
	#	I-- [ESC]     I是插入，插入“--”，按ESC键来为每一行生效。注意是大写的I
	#/********************************************************************/
	#	<C-v>
	#	选中相关的行 (可使用 j 或 <C-d> 或是 /pattern 或是 % 等……)
	#	$ 到行最后
	#	A, 输入字符串，按 ESC
	#/********************************************************************/
#可视化其他功能
可视化选择： v,V,<Ctrl+v>
	J → 把所有的行连接起来（变成一行）
	< 或 > → 左右缩进
	= → 自动给缩进 （这个功能相当强大，我太喜欢了）
#自动补齐
在 Insert 模式下，你可以输入一个词的开头，然后按 <Ctrl+p>或是<Ctrl+n>，自动补齐功能就出现了
#分屏
分屏: :split 和 vsplit.
下面是主要的命令，你可以使用VIM的帮助 :help split. 你可以参考本站以前的一篇文章VIM分屏。
:split → 创建分屏 (:vsplit创建垂直分屏)
<Ctrl+w><dir> : dir就是方向，可以是 hjkl 或是 ←↓↑→ 中的一个，其用来切换分屏。
<Ctrl+w>_ (或 <Ctrl+w>|) : 最大化尺寸 (<Ctrl+w>| 垂直分屏)
<Ctrl+w>+ (或 <Ctrl+w>-) : 增加尺寸
Ctrl+w then C: 关闭分屏
:q 也可以关闭分屏