#基础
	- http://people.redhat.com/anderson/crash_whitepaper/#WHY_CRASH
	- 数字如果没有字母，默认为10进制，有字母，默认为16进制（0x不必要）。也可以用0x作前缀强制为16进制。
	- echo c > /proc/sysrq-trigger #手动出发crash dump
#查看是否为64bit or 32bit
	- file <files>
#启动
	- cat sysdump.core* >sysdump
	- ./crash_arm64 -m phys_offset=0x80000000 vmlinux sysdump --cpus 4
	- ./crash_arm -m phys_offset=0x80000000 vmlinux sysdump --cpus 4
	- ./crash_x86_64 -m phys_base=0x34200000 vmlinux sysdump --cpus 8
	- --minimal #通常用于dump损坏
	- -d <num> #更多debug信息
#help
	- help                   #显示支持哪些命令
	- help xxx               #显示命令xxx的man page
	- crash -h ascii         #命令行显示man page

#常用命令
	- alias                  #显示内建的缩写命令
	- set scroll off/on      #关闭/打开卷屏功能
	- set                    #显示当前context
	- set pid/task address   #切换context。参数可以为pid进程号，也可以是task的地址。
	- set -c cpu_num         #显示cpu_num上的context
	- set -p                 #显示panic task的context
	- rd                     #读取当前context下的内存。
	
#Symbolic Display of Kernel Text or Data
	- struct                 #可以显示某个结构体的定义，或者结构体变量的详细信息。help struct查看更多。
	- union                  #与struct类似，help union 查看更多。
	- *                      #可以用来替代struct/union的命令。
	- p/pd/px                #显示变量或者表达式的值。可以计算表达式。help p查看更多。
	- whatis                 #显示数据类型
	- dis -xl symbol/addr    #反汇编，并且可以显示行号。
#System state
	- bt                     #显示当前context的back-trace，即call stack
	- files [pid]            #显示pid所在context打开的所有文件
	- irq                    #查看irq信息
	- kmem                   #查看内存信息
	- log                    #查看kernel message buffer chronologically
	- ps                     #打印进程信息。
	- runq	                 #Displays list of tasks on the run queue.
	- sig	                 #A context-sensitive command which displays a task's signal information
	- task                   #显示task结构体信息。
	- timer                  #显示timer相关信息。
	- waitq                  #显示waitq相关信息。
#Utility functions
	- ascii                  #将数字转换为ascii码
	- search	             #Searches a range of user or kernel memory space for given value, with an optional "don't care" bit-mask argument.
	- rd -32 symbol count    #读内存
	- wr -32 addr value      #写内存, 在dump file不可用。
#Session Control Commands
	- foreach                #好用的命令。

#对于模块中的符号：
#需要先加载相应的模块进来，才能显示符号对应的源码：
	- mod # 查看模块
	- mod -s module /path/to/module.ko # 加载模块
	- ym symbol # 显示符号对应的模块源码，也可以用virtual address
	
#====================================================================================================================
#====================================================================================================================
#====================================================================================================================
#解释dump
- 关键字：PC is at
- PANIC: "Oops: 0002"        #显示为一个kernel page error。
- Not tainted：表示kernel没有安装其他模块。
- exception RIP: default_idle+61
	+ RIP： is the instruction pointer，指向程序内存地址。
	+ default_idle： 出先crash的函数
	+ 61：函数内的偏移
- CS: 0010
	+ CS：code segment
	+ 最右边的数字为偶数，表示执行在kernel mode，为奇数，执行在user mode。
- ps命令显示所有task，其中active的task标记为">";[]括起来的是kernel threads。
- 6b6b6b63：这个地址是kernel中被free的memory的填充地址。
- cccccccc ：这个值在stack上面出现，这个值后面的就是call stack
- bbbbbbbb : 这个值通常为use-after-free的地址
- kmem -S 0xe8e2d64c: 可以查看slab结构体栈调用信息



